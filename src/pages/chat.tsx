import Head from 'next/head'
import Sidebar from '@/components/Sidebar';
import { useEffect, useState, useRef } from 'react';
import ChatLogComponent from '@/components/ChatLog';
import ChatInputComponent from '@/components/ChatInput';

export default function Home() {
  const [isSidebarOpen, setIsSideBarOpen] = useState<Boolean>(true)

  const [chatLog, setChatLog] = useState<any>([])
  const [input, setInput] = useState<string>('')
  const [activeEngine, setActiveEngine] = useState<Array<any>>([])

  const [isLoading, setIsLoading] = useState<Boolean>(false)

  const mainRef = useRef<HTMLDivElement>(null)

  // Set localStorage chatLog on first render
  useEffect(() => {
    const localData = localStorage.getItem('chatLog');
    setChatLog(localData ? JSON.parse(localData) : [])
  }, [])

  // Set localStorage chatLog on chatLog change and scroll into view
  useEffect(() => {
        if (chatLog.length > 0) {
            localStorage.setItem('chatLog', JSON.stringify(chatLog));
        }

        if (mainRef.current) {
           mainRef.current.scrollTop = mainRef.current.scrollHeight;
        }
  }, [chatLog])

  return (
    <>
      <Head>
        <title>OpenAI Demo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="grid grid-cols-8 h-screen">
        <aside className={`${isSidebarOpen ? 'col-span-1 max-w-[300px]' : 'max-w-0'} z-[10] transition-all easeout h-screen duration-500 bg-zinc-900 border-r-4 border-primary`}>
            <Sidebar 
              chatLogState={[chatLog, setChatLog]} 
              setIsSideBarOpen={setIsSideBarOpen} 
              isSidebarOpen={isSidebarOpen}
              activeEngineState={[activeEngine, setActiveEngine]} />
        </aside>

        <main ref={mainRef} className={`${isSidebarOpen ? 'col-span-7' : 'col-span-8 duration-2000 z-[1]  transition-all absolute bottom-0 w-full'} overflow-scroll h-screen`}>
            <div className="flex flex-col h-full ">
                <ChatLogComponent 
                  chatLogState={[chatLog, setChatLog]} />
                <ChatInputComponent 
                  chatLogState={[chatLog, setChatLog]} 
                  inputState={[input, setInput]}
                  activeEngineState={[activeEngine, setActiveEngine]}/>
            </div>
        </main>
      </div>
    </>
  )
}
